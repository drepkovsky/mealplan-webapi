openapi: 3.0.0
servers:
- description: Hospital Meal Plan Management Endpoint
  url: /api
info:
  description: API to manage meals, patients, and their meal plans in a hospital.
  version: '1.0.0'
  title: Hospital Meal Plan Management API
  contact:
    email: <your_email>
  license:
    name: CC BY 4.0
    url: 'https://creativecommons.org/licenses/by/4.0/'
tags:
- name: Meals
  description: Operations about meals
- name: Patients
  description: Operations about patients
- name: Meal Plans
  description: Operations about meal plans

paths:
  # Meals operations
  '/meals':
    post:
      tags:
      - Meals
      summary: Creates a new meal
      operationId: createMeal
      requestBody:
        description: Data for a new meal
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Meal'
            examples:
              exampleMeal:
                $ref: '#/components/examples/ExampleMeal'
      responses:
        '201':
          description: Meal created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meal'
    get:
      tags:
      - Meals
      summary: List all meals
      operationId: listMeals
      responses:
        '200':
          description: A list of meals
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Meal'
                  # examples:
                  #   mealsList:
                  #     $ref: '#/components/examples/MealsListExample'
  '/meals/{mealId}':
    get:
      tags:
      - Meals
      summary: Get a meal by ID
      operationId: getMeal
      parameters:
      - name: mealId
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Meal details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meal'
                examples:
                  specificMeal:
                    $ref: '#/components/examples/SpecificMealExample'
        '404':
          description: Meal not found
    put:
      tags:
      - Meals
      summary: Update a meal by ID
      operationId: updateMeal
      parameters:
      - name: mealId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: Data for updating a meal
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Meal'
      responses:
        '200':
          description: Meal updated
    delete:
      tags:
      - Meals
      summary: Delete a meal by ID
      operationId: deleteMeal
      parameters:
      - name: mealId
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Meal deleted
        '404':
          description: Meal not found

  # Patients operations
  '/patients':
    post:
      tags:
      - Patients
      summary: Creates a new patient
      operationId: createPatient
      requestBody:
        description: Data for a new patient
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patient'
            examples:
              examplePatient:
                $ref: '#/components/examples/ExamplePatient'
      responses:
        '201':
          description: Patient created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
    get:
      tags:
      - Patients
      summary: List all patients
      operationId: listPatients
      responses:
        '200':
          description: A list of patients
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Patient'
                  # examples:
                  #   patientsList:
                  #     $ref: '#/components/examples/PatientsListExample'
  '/patients/{patientId}':
    get:
      tags:
      - Patients
      summary: Get a patient by ID
      operationId: getPatient
      parameters:
      - name: patientId
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Patient details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
                examples:
                  specificPatient:
                    $ref: '#/components/examples/SpecificPatientExample'
        '404':
          description: Patient not found
    put:
      tags:
      - Patients
      summary: Update a patient by ID
      operationId: updatePatient
      parameters:
      - name: patientId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: Data for updating a patient
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patient'
      responses:
        '200':
          description: Patient updated
    delete:
      tags:
      - Patients
      summary: Delete a patient by ID
      operationId: deletePatient
      parameters:
      - name: patientId
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Patient deleted
        '404':
          description: Patient not found

  # Meal Plans operations
  '/meal-plans':
    post:
      tags:
      - Meal Plans
      summary: Creates a new meal plan
      operationId: createMealPlan
      requestBody:
        description: Data for a new meal plan
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MealPlan'
            examples:
              exampleMealPlan:
                $ref: '#/components/examples/ExampleMealPlan'
      responses:
        '201':
          description: Meal plan created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MealPlan'
    get:
      tags:
      - Meal Plans
      summary: List all meal plans
      operationId: listMealPlans
      responses:
        '200':
          description: A list of meal plans
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MealPlan'
                  # examples:
                  #   mealPlansList:
                  #     $ref: '#/components/examples/MealPlansListExample'
  '/meal-plans/{mealPlanId}':
    get:
      tags:
      - Meal Plans
      summary: Get a meal plan by ID
      operationId: getMealPlan
      parameters:
      - name: mealPlanId
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Meal plan details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MealPlan'
                examples:
                  specificMealPlan:
                    $ref: '#/components/examples/SpecificMealPlanExample'
        '404':
          description: Meal plan not found
    put:
      tags:
      - Meal Plans
      summary: Update a meal plan by ID
      operationId: updateMealPlan
      parameters:
      - name: mealPlanId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: Data for updating a meal plan
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MealPlan'
      responses:
        '200':
          description: Meal plan updated
    delete:
      tags:
      - Meal Plans
      summary: Delete a meal plan by ID
      operationId: deleteMealPlan
      parameters:
      - name: mealPlanId
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Meal plan deleted
        '404':
          description: Meal plan not found

components:
  schemas:
    Meal:
      type: object
      required: [id, name, nutrients, portionSize, allergens, ingredients]
      properties:
        id:
          type: string
          example: meal-id
          description: Unique identifier of the meal
        name:
          type: string
          description: Name of the meal
        nutrients:
          type: object
          properties:
            fats:
              type: number
              format: float
            carbohydrates:
              type: number
              format: float
            proteins:
              type: number
              format: float
            calories:
              type: integer
          description: Nutritional content per serving
        portionSize:
          type: string
          description: Size of a single portion
        allergens:
          type: array
          items:
            type: string
          description: List of potential allergens
        ingredients:
          type: array
          items:
            type: string
          description: List of ingredients used in the meal
    Patient:
      type: object
      required: [fullName, patientId, age, allergens, ingredientPreferences]
      properties:
        fullName:
          type: string
          description: Full name of the patient
        patientId:
          type: string
          description: Unique identifier for the patient
        age:
          type: integer
          description: Age of the patient
        allergens:
          type: array
          items:
            type: string
          description: List of patient's allergens
        ingredientPreferences:
          type: array
          items:
            type: string
          description: List of preferred ingredients for the patient
    MealPlan:
      type: object
      required: [id, date, patientId, meals]
      properties:
        id:
          type: string
          example: meal-plan-id
          description: Unique meal plan identifier
        date:
          type: string
          format: date
          description: Date for which the meal plan is scheduled
        patientId:
          type: string
          description: Reference to the patient
        meals:
          type: array
          items:
            type: object
            properties:
              mealId:
                type: string
              time:
                type: string
                format: time
          description: Meals included in the plan with scheduled times
  examples:
    ExampleMeal:
      summary: Example Meal Creation
      value:
        id: "grilled-chicken-salad"
        name: "Grilled Chicken Salad"
        nutrients:
          fats: 10
          carbohydrates: 5
          proteins: 30
          calories: 250
        portionSize: "250g"
        allergens: ["nuts"]
        ingredients: ["chicken", "mixed greens", "olive oil", "almonds"]
    MealsListExample:
      summary: Example list of meals
      value:
      - id: 'grilled-chicken-salad'
        name: "Grilled Chicken Salad"
        nutrients:
          fats: 10
          carbohydrates: 5
          proteins: 30
          calories: 250
        portionSize: "250g"
        allergens: ["nuts"]
        ingredients: ["chicken", "mixed greens", "olive oil", "almonds"]
      - id: 'vegetable-stir-fry'
        name: "Vegetable Stir Fry"
        nutrients:
          fats: 5
          carbohydrates: 20
          proteins: 5
          calories: 150
        portionSize: "300g"
        allergens: ["soy"]
        ingredients: ["bell peppers", "broccoli", "soy sauce", "tofu"]
    SpecificMealExample:
      summary: Specific meal details
      value:
        id: 'grilled-chicken-salad'
        name: "Grilled Chicken Salad"
        nutrients:
          fats: 10
          carbohydrates: 5
          proteins: 30
          calories: 250
        portionSize: "250g"
        allergens: ["nuts"]
        ingredients: ["chicken", "mixed greens", "olive oil", "almonds"]
    ExamplePatient:
      summary: Example Patient Creation
      value:
        fullName: "John Doe"
        patientId: "1234567890"
        age: 34
        allergens: ["peanuts", "shellfish"]
        ingredientPreferences: ["chicken", "rice"]
    PatientsListExample:
      summary: Example list of patients
      value:
      - fullName: "John Doe"
        patientId: "1234567890"
        age: 34
        allergens: ["peanuts", "shellfish"]
        ingredientPreferences: ["chicken", "rice"]
      - fullName: "Jane Smith"
        patientId: "0987654321"
        age: 29
        allergens: ["gluten"]
        ingredientPreferences: ["beef", "quinoa"]
    SpecificPatientExample:
      summary: Specific Patient Details
      value:
        fullName: "John Doe"
        patientId: "1234567890"
        age: 34
        allergens: ["peanuts", "shellfish"]
        ingredientPreferences: ["chicken", "rice"]
    ExampleMealPlan:
      summary: Example Meal Plan Creation
      value:
        date: "2024-05-01"
        patientId: "1234567890"
        meals:
        - mealId: "meal001"
          time: "08:00"
        - mealId: "meal002"
          time: "12:00"
    MealPlansListExample:
      summary: Example list of meal plans
      value:
      - date: "2024-05-01"
        patientId: "1234567890"
        meals:
        - mealId: "meal001"
          time: "08:00"
        - mealId: "meal002"
          time: "12:00"
    SpecificMealPlanExample:
      summary: Specific Meal Plan Details
      value:
        date: "2024-05-01"
        patientId: "1234567890"
        meals:
        - mealId: "meal001"
          time: "08:00"
        - mealId: "meal002"
          time: "12:00"
