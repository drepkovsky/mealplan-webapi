/*
 * Hospital Meal Plan Management API
 *
 * API to manage meals, patients, and their meal plans in a hospital.
 *
 * API version: 1.0.0
 * Contact: <your_email>
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package mealplan

import (
	"net/http"

	"github.com/gin-gonic/gin"
)

type MealsAPI interface {

	// internal registration of api routes
	addRoutes(routerGroup *gin.RouterGroup)

	// CreateMeal - Creates a new meal
	CreateMeal(ctx *gin.Context)

	// DeleteMeal - Delete a meal by ID
	DeleteMeal(ctx *gin.Context)

	// GetMeal - Get a meal by ID
	GetMeal(ctx *gin.Context)

	// ListMeals - List all meals
	ListMeals(ctx *gin.Context)

	// UpdateMeal - Update a meal by ID
	UpdateMeal(ctx *gin.Context)
}

// partial implementation of MealsAPI - all functions must be implemented in add on files
type implMealsAPI struct {
}

func newMealsAPI() MealsAPI {
	return &implMealsAPI{}
}

func (this *implMealsAPI) addRoutes(routerGroup *gin.RouterGroup) {
	routerGroup.Handle(http.MethodPost, "/meals", this.CreateMeal)
	routerGroup.Handle(http.MethodDelete, "/meals/:mealId", this.DeleteMeal)
	routerGroup.Handle(http.MethodGet, "/meals/:mealId", this.GetMeal)
	routerGroup.Handle(http.MethodGet, "/meals", this.ListMeals)
	routerGroup.Handle(http.MethodPut, "/meals/:mealId", this.UpdateMeal)
}

// Copy following section to separate file, uncomment, and implement accordingly
// // CreateMeal - Creates a new meal
// func (this *implMealsAPI) CreateMeal(ctx *gin.Context) {
//  	ctx.AbortWithStatus(http.StatusNotImplemented)
// }
//
// // DeleteMeal - Delete a meal by ID
// func (this *implMealsAPI) DeleteMeal(ctx *gin.Context) {
//  	ctx.AbortWithStatus(http.StatusNotImplemented)
// }
//
// // GetMeal - Get a meal by ID
// func (this *implMealsAPI) GetMeal(ctx *gin.Context) {
//  	ctx.AbortWithStatus(http.StatusNotImplemented)
// }
//
// // ListMeals - List all meals
// func (this *implMealsAPI) ListMeals(ctx *gin.Context) {
//  	ctx.AbortWithStatus(http.StatusNotImplemented)
// }
//
// // UpdateMeal - Update a meal by ID
// func (this *implMealsAPI) UpdateMeal(ctx *gin.Context) {
//  	ctx.AbortWithStatus(http.StatusNotImplemented)
// }
//
