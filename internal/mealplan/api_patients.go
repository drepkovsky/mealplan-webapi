/*
 * Hospital Meal Plan Management API
 *
 * API to manage meals, patients, and their meal plans in a hospital.
 *
 * API version: 1.0.0
 * Contact: <your_email>
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

 package mealplan

import (
   "net/http"

   "github.com/gin-gonic/gin"
)

type PatientsAPI interface {

   // internal registration of api routes
   addRoutes(routerGroup *gin.RouterGroup)

    // CreatePatient - Creates a new patient
   CreatePatient(ctx *gin.Context)

    // DeletePatient - Delete a patient by ID
   DeletePatient(ctx *gin.Context)

    // GetPatient - Get a patient by ID
   GetPatient(ctx *gin.Context)

    // ListPatients - List all patients
   ListPatients(ctx *gin.Context)

    // UpdatePatient - Update a patient by ID
   UpdatePatient(ctx *gin.Context)

 }


 // partial implementation of PatientsAPI - all functions must be implemented in add on files
type implPatientsAPI struct {

}

func newPatientsAPI() PatientsAPI {
  return &implPatientsAPI{}
}

func (this *implPatientsAPI) addRoutes(routerGroup *gin.RouterGroup) {
  routerGroup.Handle( http.MethodPost, "/patients", this.CreatePatient)
  routerGroup.Handle( http.MethodDelete, "/patients/:patientId", this.DeletePatient)
  routerGroup.Handle( http.MethodGet, "/patients/:patientId", this.GetPatient)
  routerGroup.Handle( http.MethodGet, "/patients", this.ListPatients)
  routerGroup.Handle( http.MethodPut, "/patients/:patientId", this.UpdatePatient)
}

// Copy following section to separate file, uncomment, and implement accordingly
// // CreatePatient - Creates a new patient
// func (this *implPatientsAPI) CreatePatient(ctx *gin.Context) {
//  	ctx.AbortWithStatus(http.StatusNotImplemented)
// }
//
// // DeletePatient - Delete a patient by ID
// func (this *implPatientsAPI) DeletePatient(ctx *gin.Context) {
//  	ctx.AbortWithStatus(http.StatusNotImplemented)
// }
//
// // GetPatient - Get a patient by ID
// func (this *implPatientsAPI) GetPatient(ctx *gin.Context) {
//  	ctx.AbortWithStatus(http.StatusNotImplemented)
// }
//
// // ListPatients - List all patients
// func (this *implPatientsAPI) ListPatients(ctx *gin.Context) {
//  	ctx.AbortWithStatus(http.StatusNotImplemented)
// }
//
// // UpdatePatient - Update a patient by ID
// func (this *implPatientsAPI) UpdatePatient(ctx *gin.Context) {
//  	ctx.AbortWithStatus(http.StatusNotImplemented)
// }
//

